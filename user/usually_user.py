from datetime import datetime, timedelta, date
from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.filters.state import State

from database import database
from yoomoney_work import get_link_for_payment

user_router = Router()
err = State()

# –ö–æ–º–∞–Ω–¥–∞ /start
@user_router.message(CommandStart())
async def cmd_start(message: Message, bot: Bot):
    if database.find_user(message.from_user.id):
        await message.answer('‚ö†Ô∏è –í—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.')
        return

    date_first_payment = (datetime.now() + timedelta(days=1))
    link = database.get_link()
    if link:
        await message.answer("üéâ –í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN:")
        await message.answer(f"<pre><code>{link}</code></pre>")
        database.create_user(message.from_user.username, message.from_user.id, date_first_payment, link=link)
        await message.answer('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
        await cmd_help(message, bot)
    else:
        await message.answer("üòï –í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –≤—Å–µ –º–µ—Å—Ç–∞ –∑–∞–Ω—è—Ç—ã, –Ω–æ –æ–Ω–∏ —Å–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è. "
                             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        for admin in database.list_admin():
            await bot.send_message(admin, "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ, –≤ —Ñ–∞–π–ª–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Å—Å—ã–ª–∫–∏.")

# –ö–æ–º–∞–Ω–¥–∞ /help
@user_router.message(Command("help"))
async def cmd_help(message: Message, bot: Bot):
    help_text = (
        "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:</b>\n"
        "1. <b>/start</b> ‚Äî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è VPN.\n"
        "2. <b>/payment</b> ‚Äî –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã (–¥–æ—Å—Ç—É–ø–Ω–æ –∑–∞ –¥–µ–Ω—å –¥–æ —Å—Ä–æ–∫–∞ –æ–ø–ª–∞—Ç—ã).\n"
        "3. <b>/error</b> ‚Äî –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ.\n"
        "4. <b>/help</b> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–∏.\n\n"
        "üìå –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."
    )
    await message.answer(help_text)

# –ö–æ–º–∞–Ω–¥–∞ /error
@user_router.message(Command('error'))
async def cmd_get_error(message: Message, state: FSMContext):
    await message.answer('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –µ—ë —Ä–µ—à–∏—Ç—å.')
    await state.set_state(err)

# –ö–æ–º–∞–Ω–¥–∞ /payment
@user_router.message(Command("payment"))
async def cmd_payment(message: Message, bot: Bot):
    user = database.find_user(message.from_user.id)
    if (date.today() - timedelta(days=8)) < user.date <= (
            date.today() + timedelta(days=1)):
        await message.answer("üí≥ –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:")
        await message.answer(f"{get_link_for_payment(user)}")
    else:
        payment_date = user.date - timedelta(days=1)
        await message.answer(f"‚è≥ –ï—â—ë —Ä–∞–Ω–æ –¥–ª—è –æ–ø–ª–∞—Ç—ã. –°—Å—ã–ª–∫–∞ –ø—Ä–∏–¥—ë—Ç {payment_date.strftime('%Y-%m-%d')}.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ –ø—Ä–æ–±–ª–µ–º–µ
@user_router.message(err)
async def cmd_get_error(message: Message, state: FSMContext, bot: Bot):
    await message.answer('üì© –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. –ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã!')
    await state.clear()
    for admin in database.list_admin():
        await bot.send_message(admin.chat_id,
                               f"üîî –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ –æ—Ç("
                               f"{database.find_user(message.from_user.id)}):\n\n{message.text}")